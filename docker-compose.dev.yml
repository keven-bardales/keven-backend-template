version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: keven-backend-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-keven_backend_dev}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      # Persistent volume for database data
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-keven_backend_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - keven-backend-network-dev

  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: keven-backend-api-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-keven_backend_dev}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_ACCESS_EXPIRES_IN: ${JWT_ACCESS_EXPIRES_IN:-10m}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      BCRYPT_SALT_ROUNDS: ${BCRYPT_SALT_ROUNDS:-10}
      SUPER_ADMIN_EMAIL: ${SUPER_ADMIN_EMAIL}
      PORT: ${PORT:-3000}
      SWAGGER_ENABLED: ${SWAGGER_ENABLED:-true}
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src:delegated
      - ./prisma:/app/prisma:delegated
      # Prevent node_modules from being overwritten
      - /app/node_modules
      # Mount logs directory
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keven-backend-network-dev
    develop:
      # Enable watch mode for automatic container updates
      watch:
        - action: sync
          path: ./src
          target: /app/src
          ignore:
            - node_modules/
        - action: sync
          path: ./prisma
          target: /app/prisma
        - action: rebuild
          path: package.json

networks:
  keven-backend-network-dev:
    driver: bridge

volumes:
  # Named volume for persistent database storage
  postgres_data_dev:
    name: keven-backend-postgres-data-dev