version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: keven-backend-db-prod
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      # Persistent volume for database data
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - keven-backend-network-prod
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: keven-backend-api-prod
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_ACCESS_EXPIRES_IN: ${JWT_ACCESS_EXPIRES_IN:-10m}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      BCRYPT_SALT_ROUNDS: ${BCRYPT_SALT_ROUNDS:-10}
      SUPER_ADMIN_EMAIL: ${SUPER_ADMIN_EMAIL}
      PORT: ${PORT:-3000}
      SWAGGER_ENABLED: ${SWAGGER_ENABLED:-false}
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      # Only mount logs directory in production
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keven-backend-network-prod
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

networks:
  keven-backend-network-prod:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  # Named volume for persistent database storage
  postgres_data_prod:
    name: keven-backend-postgres-data-prod